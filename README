-- ETORRENT --

ETORRENT is a bittorrent client written in Erlang. The focus is on
robustness and scalability in number of torrents rather than in pure
speed. ETORRENT is mostly meant for unattended operation, where one
just specifies what files to download and gets a notification when
they are.

ETORRENT was mostly conceived as an experiment in how easy it would be
to write a bittorrent client in Erlang. The hypothesis is that the
code will be cleaner and smaller than comparative bittorrent clients.

Note that the code is not yet battle scarred. It has not stood up to the
testing of time and as such, it will fail - sometimes in nasty ways and
maybe as a bad p2p citizen. Hence, you should put restraint in using it
unless you are able to fix eventual problems. If you've noticed any bad
behaviour it is definitely a bug and should be reported as soon as possible
so we can get it away.

Currently supported BEPs:

BEP 03 - The BitTorrent Protocol Specification.
BEP 04 - Known Number Allocations.
BEP 23 - Tracker Returns Compact Peer Lists.

-- GETTING STARTED WITHOUT INSTALLING --

1. run "./autogen.sh". This calls autoconf and friends. On non-GNU
   systems, you need GNU Make and a call to 'gmake' or something such depending
   on your platform.

2. run "./configure"
   Optionally: To run with debugging symbols, execute something along
   the lines of "env ERLCFLAGS='+debug_info' ./configure". This is also
   needed if you want to run the dialyzer on the source ("make dialyzer").

3. run "make" (These steps are not necessary for the latter)

4. cd into lib/etorrent-1.0/ebin.

5. copy ../../../etc/etorrent.config into the ebin dir and edit it to your
   liking.
   Note that the directory for watching torrents and the directory for
   error logs should exist (or things get nasty).

6. run "erl -pa . -config etorrent.config -sname etorrent -s etorrent"
   you can add +Ktrue +A 128 for architectures that supports it.

7. drop a .torrent file in the watched dir and see what happens.

8. call etorrent:help(). from the erlang CLI to get a list of available
   commands.

-- GETTING STARTED WITH INSTALLING --

NOTE: This method has not yet seen heavy testing. It can be made a lot
      better than it is.

1. make -f Makefile.init
2. ./configure
3. make
4. make install (as root)
5. edit ${prefix}/etc/etorrent.config to your liking
6. run ${bindir}/etorrentctl start

-- REPORTING BUGS --

Google has an issue tracker at:

  http://code.google.com/p/etorrent/issues/list

Use that for bug reports. I'll get to them as soon as I can.
