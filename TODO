* Peer Master
- Implement rounds
  Implement choking/unchoking rounds in the Peer Master.

* Peer Process
- Write Connection code. (Steal from old).
- Write Handshaking code. (Steal from old).

* Dirwatcher
- There are some tricks to be played here so we get faster startup.
  Rather than using a timer, base the code on a more direct approach
   where timeouts are used internally together with a self-applied
   start cast. It will greatly speedup and simplify the dirwatcher
   code.

* Connection management
- Implement seeding
  We are not doing anything specific to take care of seeding right
  now. This must obviously be cared for.
- Implement torrent_piecemap:pieces_downloaded/1
  The function asks to the piecemap what pieces we have downloaded. We
  must return a correct answer.
- Implement code for putback when a connection dies.
  If a connection dies, all pieces on its request table should be
  remapped to be eligible for others to work on.
- Fix connection_manager
  We need to fix the state code for the connection manager. It has some
  state tables that obviously needs to be managed. But it has to be
  simplified a lot. And it really can. Mapping of pids to torrents and
  peerids should be handled by a separate process which only has this as
  the primary goal.
- Check if a torrent is duplicate.
  We must check if a given torrent file which has just been added is a
  duplicate of a torrent we already manage. If this is the case, then we
  should just ignore it.

* General stuff
- Reduce the number of ets tables
  Fix and reduce the number of ets tables to a constant amount. This
  will allow us to scale into post-1000 concurrent torrents.
- Add license facts
- Add author facts

------------------------------------------------------------
VERSION 2.0
------------------------------------------------------------
* Make torrent_piecemap request data in a rarest first scheme.
  Currently torrent_piecemap requests data in a scheme which is
  "pick-random-piece". It should use rarest first instead to drive
  up the download speed and make torrent health better.

* Cleanups
- Decide what to do if we connect multiply to the same IP

------------------------------------------------------------
VERSION 3.0
------------------------------------------------------------
* Implement the fast extension.
